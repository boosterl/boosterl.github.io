<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The world beyond Linux</title>
    <link>https://worldbeyondlinux.be/posts/</link>
    <description>Recent content in Posts on The world beyond Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Jun 2023 13:37:07 +0200</lastBuildDate><atom:link href="https://worldbeyondlinux.be/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPIO on the MangoPi MQ-Pro</title>
      <link>https://worldbeyondlinux.be/posts/gpio-on-the-mango-pi/</link>
      <pubDate>Sat, 03 Jun 2023 13:37:07 +0200</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/gpio-on-the-mango-pi/</guid>
      <description>One of the last aspects I wanted to explore and get working on my MangoPi MQ-Pro. For this experiment, like my previous endeavor trying out Bluetooth on my MangoPi MQ-Pro, I used the Ubuntu 22.10 RISC-V image for the SiPeed LicheeRV Dock image.
No extra configuration is needed to get GPIO working with this image on the MangoPi MQ-Pro. I tried out three different ways of accessing the GPIO pins; using legacy sysfs-based access, using the userspace GPIO driver, and lastly using lgpio from Python.</description>
    </item>
    
    <item>
      <title>Setting up Bluetooth on the MangoPi MQ-Pro, and testing it out with a Bluetooth access point</title>
      <link>https://worldbeyondlinux.be/posts/bluetooth-on-the-mango-pi/</link>
      <pubDate>Sat, 25 Mar 2023 17:17:55 +0100</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/bluetooth-on-the-mango-pi/</guid>
      <description>I received my MangoPi MQ-Pro a few months ago, and was very eager to test out all the hardware which I use the most on SBC&amp;rsquo;s. Bluetooth is not one of the features I use a lot on SBC&amp;rsquo;s. But after having tested out a lot of operating systems and hardware features of the board, I decided to also try and see what the status of Bluetooth on the board was.</description>
    </item>
    
    <item>
      <title>Exploring non-Linux Based Operating Systems on Allwinner D1</title>
      <link>https://worldbeyondlinux.be/posts/exploring-non-linux-oses-on-d1/</link>
      <pubDate>Mon, 31 Oct 2022 16:28:12 +0100</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/exploring-non-linux-oses-on-d1/</guid>
      <description>Introduction As of writing this article, there are a few choices of operating systems to choose from for the Allwinner D1. In the future, more choices will probably become available. In this article we will take a closer look into FreeBSD and xv6 for the Allwinner D1. I will use a MangoPi MQ-Pro to test these operating systems.
FreeBSD For many people, FreeBSD won&amp;rsquo;t need an introduction. FreeBSD is a free and open-source Unix-like operating system first released in 1993.</description>
    </item>
    
    <item>
      <title>Running x86_64 Software on RISC-V Using Box64</title>
      <link>https://worldbeyondlinux.be/posts/running-x86-64-software-on-riscv-using-box64/</link>
      <pubDate>Mon, 19 Sep 2022 18:44:12 +0200</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/running-x86-64-software-on-riscv-using-box64/</guid>
      <description>In this post I will give an overview on how a ran some software compiled for x86_64 on my RISC-V SBC, a MangoPi MQ-Pro. We will be using an awesome piece of software called Box64. Basically this software runs x86_64 binaries through an emulator, but with a twist; it uses the native versions of some &amp;ldquo;system&amp;rdquo; libraries, like libc, libm, SDL, and OpenGL, like described in the README of the project:</description>
    </item>
    
    <item>
      <title>How to Use a Raspberry Pi Instead of a USB Console Cable</title>
      <link>https://worldbeyondlinux.be/posts/how-to-use-a-pi-instead-of-a-usb-console-cable/</link>
      <pubDate>Sun, 28 Aug 2022 11:39:44 +0200</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/how-to-use-a-pi-instead-of-a-usb-console-cable/</guid>
      <description>As the title says, this article will be about using a Raspberry Pi SBC (whatever model), instead of a USB Console Cable to debug another SBC, router, microcontroller&amp;hellip; The need for this came when I received my MangoPi MQ-Pro, I wanted to try different operating systems for this SBC, but I didn&amp;rsquo;t have access to a USB Console Cable, at least not one that was 3.3V tolerant. I wanted to have access to the serial console because a lot of OS images for the MangoPi, at the time of writing this article, didn&amp;rsquo;t have HDMI drivers.</description>
    </item>
    
    <item>
      <title>How to run the Apache webserver on a five year old Android smartwatch</title>
      <link>https://worldbeyondlinux.be/posts/how-to-run-apache-on-a-smartwatch/</link>
      <pubDate>Sat, 30 Nov 2019 11:53:16 +0100</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/how-to-run-apache-on-a-smartwatch/</guid>
      <description>The first question you might ask yourself when reading the title of this article is; why would you want to this. My answer to that question is, why wouldn&amp;rsquo;t you?
I like using technology in ways that makes my live easier. That&amp;rsquo;s why I bought my Motorola Moto 360 in the first place, more than five years ago. It has indeed made my life easier in a few ways, quickly reading a message, discarding when necessary, or pulling out my phone when I need/want to reply.</description>
    </item>
    
    <item>
      <title>How I Run My Blog Using Github Pages and Hugo</title>
      <link>https://worldbeyondlinux.be/posts/how-i-run-my-blog-using-github-pages-and-hugo/</link>
      <pubDate>Sat, 27 Jul 2019 12:51:45 +0000</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/how-i-run-my-blog-using-github-pages-and-hugo/</guid>
      <description>For my blog I&amp;rsquo;m using Github pages to host the static content generated by Hugo. Hugo is a static site generator which creates web pages from markdown files you write. That way, when you don&amp;rsquo;t want to be bothered with styling your blog, you can just choose a theme from a vast collection, and you&amp;rsquo;re done. Just write some posts in markdown run the hugo command, and you will find all the static content in the public directory, ready to deploy to a web server, or, in my case, Github pages.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://worldbeyondlinux.be/posts/my-first-post/</link>
      <pubDate>Wed, 24 Apr 2019 21:12:51 +0200</pubDate>
      
      <guid>https://worldbeyondlinux.be/posts/my-first-post/</guid>
      <description>Hello there, this is my first blog post. Let me first start by saying a few words about myself, my name is Bram Oosterlynck and I was born in Belgium. In my free time I like to do a lot of stuff, camping, hiking, road trips, etc. But this blog will be about something else I love doing in my free time. I love playing around with technology, and that is what this blog will be about.</description>
    </item>
    
  </channel>
</rss>
